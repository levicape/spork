{
  "name": "@levicape/spork-magmap-ui",
  "version": "0.0.0-local.0",
  "author": "Pedro Cardona",
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "packagescript": "pnpm run",
    "outpaths": "./output",
    "lintpaths": "./server ./src ./server.ts",
    "server": "./server.ts",
    "serverrender": "./render/server.tsx",
    "staticwwwoutput": "./output/staticwww",
    "staticwwwcanary": "module/canary/StaticWWW.mjs",
    "webhttpoutput": "./output/webhttp",
    "webhttpmodule": "./server.js"
  },
  "dependencies": {
    "@aws-lambda-powertools/logger": "catalog:log-awspowertools",
    "@levicape/paloma": "catalog:",
    "@levicape/spork-atlas": "workspace:",
    "@loglayer/transport-aws-lambda-powertools": "catalog:log-loglayer",
    "@loglayer/transport-consola": "catalog:log-loglayer",
    "consola": "catalog:log-consola",
    "effect": "catalog:effect",
    "express": "catalog:http-express",
    "loglayer": "catalog:log-loglayer",
    "react": "catalog:web-react",
    "react-dom": "catalog:web-react",
    "serialize-error": "catalog:error",
    "sirv": "catalog:http-express",
    "std-env": "catalog:runtime-env",
    "ulidx": "catalog:id",
    "verror": "catalog:error"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@tailwindcss/vite": "catalog:web-style",
    "@types/express": "catalog:types",
    "@types/node": "catalog:types",
    "@types/react": "catalog:types",
    "@types/react-dom": "catalog:types",
    "@vitejs/plugin-react-swc": "catalog:web-vite",
    "tailwindcss": "catalog:web-style",
    "typescript": "catalog:dev",
    "vite": "catalog:web-vite"
  },
  "engines": {
    "node": "22"
  },
  "files": [
    "module",
    "output"
  ],
  "nx": {
    "targets": {
      "build:module": {
        "dependsOn": [
          "build:tsc"
        ]
      },
      "build:tsc": {
        "dependsOn": [
          "@levicape/spork-magmap-io:build:module",
          "@levicape/spork-atlas:build:module"
        ]
      },
      "staticwww:build": {
        "dependsOn": [
          "build:module"
        ]
      },
      "webhttp:build": {
        "dependsOn": [
          "staticwww:build"
        ]
      },
      "webhttp:dev": {
        "dependsOn": [
          "webhttp:build"
        ]
      },
      "webhttp:preview": {
        "dependsOn": [
          "webhttp:build"
        ]
      },
      "dx:lint": {
        "dependsOn": [
          "nx:compile",
          "lint:format",
          "package:format"
        ]
      },
      "dx:precommit": {
        "dependsOn": [
          "dx:prepublish",
          "nx:test"
        ]
      },
      "dx:prepublish": {
        "dependsOn": [
          "dx:prepublish:pre",
          "dx:lint"
        ]
      },
      "dx:test": {
        "dependsOn": [
          "dx:lint",
          "nx:test"
        ]
      },
      "nx:clean": {
        "dependsOn": [
          "clean:module"
        ]
      },
      "nx:compile": {
        "dependsOn": [
          "build:module",
          "staticwww:build",
          "webhttp:build"
        ]
      },
      "nx:test": {
        "dependsOn": [
          "dx:noop"
        ]
      }
    }
  },
  "private": true,
  "scripts": {
    "build": "$npm_package_config_packageexecutor nx nx:compile --verbose",
    "build:tsc": "$npm_package_config_packageexecutor tsc -b --verbose",
    "clean": "$npm_package_config_packageexecutor nx nx:clean --verbose",
    "clean:module": "rm -rf $npm_package_config_outpaths || true",
    "dev": "$npm_package_config_packageexecutor nx webhttp:dev",
    "dx:noop": "true",
    "dx:precommit": "$npm_package_config_packageexecutor nx dx:precommit:pre && $npm_package_config_packageexecutor nx package:deps",
    "dx:precommit:pre": "echo \"Starting precommit dx. This will check package.json dependencies.\"",
    "dx:prepublish": "$npm_package_config_packageexecutor nx prepublish",
    "dx:prepublish:pre": "echo \"Starting prepublish dx. This will compile the package, lint it, format package.json and verify all exports are valid. \"",
    "dx:test": "$npm_package_config_packagescript clean && $npm_package_config_packagescript build && $npm_package_config_packagescript test",
    "lint": "$npm_package_config_packageexecutor nx exec -- biome check $npm_package_config_lintpaths",
    "lint:format": "$npm_package_config_packageexecutor nx exec -- biome check --write $npm_package_config_lintpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor nx exec -- biome check --write --unsafe $npm_package_config_lintpaths",
    "package:deps": "$npm_package_config_packageexecutor nx exec -- depcheck",
    "package:fix": "$npm_package_config_packageexecutor nx exec -- syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor nx exec -- syncpack format",
    "package:update": "$npm_package_config_packageexecutor nx exec -- syncpack update",
    "precommit": "$npm_package_config_packageexecutor nx dx:prepublish --no-cloud --verbose",
    "predx:lint": "$npm_package_config_packageexecutor nx clean",
    "prelint": "$npm_package_config_packageexecutor nx exec -- biome format $npm_package_config_lintpaths",
    "prepublish": "$npm_package_config_packageexecutor nx exec -- publint --strict",
    "preview": "$npm_package_config_packageexecutor nx webhttp:preview",
    "staticwww:build": "$npm_package_config_packageexecutor vite build --outDir $npm_package_config_staticwwwoutput --ssrManifest",
    "staticwww:canary": "node $npm_package_config_staticwwwcanary",
    "staticwww:dev": "$npm_package_config_packageexecutor vite --cors --debug --host --port ${PORT:-64128}",
    "staticwww:preview": "$npm_package_config_packageexecutor vite preview --outDir $npm_package_config_staticwwwoutput --cors --debug --host --port $PORT",
    "test": "$npm_package_config_packageexecutor nx nx:test --verbose",
    "webhttp:build": "SERVER_ENTRYPOINT=$npm_package_config_webhttpoutput/$npm_package_config_webhttpoutput CLIENT_OUTPUT=$npm_package_config_staticwwwoutput $npm_package_config_packageexecutor vite build --outDir $npm_package_config_webhttpoutput --ssr ./src/$npm_package_config_serverrender",
    "webhttp:dev": "SERVER_ENTRYPOINT=./src/$npm_package_config_serverrender $npm_package_config_server",
    "webhttp:preview": "NODE_ENV=production CLIENT_OUTPUT=$npm_package_config_staticwwwoutput SERVER_ENTRYPOINT=$npm_package_config_webhttpoutput/$npm_package_config_webhttpmodule $npm_package_config_server"
  },
  "type": "module"
}
