########################################
# THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY
########################################
Name: main_OnPush__CI_CD
RunMode: SUPERSEDED
SchemaVersion: "1.0"
Compute:
  Type: EC2
  Fleet: Linux.Arm64.2XLarge
Triggers:
  - Type: PUSH
    Branches:
      - main
Actions:
  Integration:
    Actions:
      Install:
        Identifier: aws/build@v1.0.0
        Timeout: 9
        Caching:
          FileCaching:
            a64_npm_global:
              Path: /tmp/npm-global
              RestoreKeys:
                - npminstall
            a64_pnpm_store:
              Path: /tmp/pnpm-store
              RestoreKeys:
                - pnpminstall
            a64_nx:
              Path: /tmp/nx-cache
              RestoreKeys:
                - nx
            a64_docker:
              Path: /tmp/docker-cache
              RestoreKeys:
                - docker
            a64_pulumi:
              Path: /tmp/pulumi
              RestoreKeys:
                - pulumi
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: PAKETO_CLI_IMAGE
              Value: buildpacksio/pack:latest
            - Name: PAKETO_BUILDER_IMAGE
              Value: heroku/builder:24
            - Name: PAKETO_LAUNCHER_IMAGE
              Value: heroku/heroku:24
            - Name: NPM_REGISTRY_PROTOCOL
              Value: https
            - Name: NPM_REGISTRY_HOST
              Value: npm.pkg.github.com
            - Name: PULUMI_VERSION
              Value: 3.144.1
            - Name: NODE_AUTH_TOKEN
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL://$NPM_REGISTRY_HOST --location project
            - Run: npm config set //$NPM_REGISTRY_HOST/:_authToken=$NODE_AUTH_TOKEN --location project
            - Run: npm config set prefix=/tmp/npm-global
            - Run: npm root -g
            - Run: npm install --g pnpm
            - Run: npm install --g n
            - Run: npm exec n 22
            - Run: npm exec pnpm config set store-dir /tmp/pnpm-store
            - Run: npm exec pnpm install
            - Run: mkdir -p /tmp/npm-global
            - Run: mkdir -p /tmp/pnpm-store
            - Run: mkdir -p /tmp/nx-cache
            - Run: mkdir -p /tmp/docker-cache
            - Run: mkdir -p /tmp/pulumi
            - Run: mkdir -p /tmp/docker-cache/images
            - Run: docker load --input /tmp/docker-cache/images/cli-pack.tar.gz || true
            - Run: docker pull $PAKETO_CLI_IMAGE
            - Run: docker save $PAKETO_CLI_IMAGE | gzip > /tmp/docker-cache/images/cli-pack.tar.gz
            - Run: du -sh /tmp/docker-cache/images/cli-pack.tar.gz
            - Run: docker load --input /tmp/docker-cache/images/builder.tar.gz || true
            - Run: docker pull $PAKETO_BUILDER_IMAGE
            - Run: docker save $PAKETO_BUILDER_IMAGE | gzip > /tmp/docker-cache/images/builder.tar.gz
            - Run: du -sh /tmp/docker-cache/images/builder.tar.gz
            - Run: docker load --input /tmp/docker-cache/images/launcher.tar.gz || true
            - Run: docker pull $PAKETO_LAUNCHER_IMAGE
            - Run: docker save $PAKETO_LAUNCHER_IMAGE | gzip > /tmp/docker-cache/images/launcher.tar.gz
            - Run: du -sh /tmp/docker-cache/images/launcher.tar.gz
            - Run: "[ -f /tmp/pulumi/bin/pulumi ] && /tmp/pulumi/bin/pulumi version | grep $PULUMI_VERSION || curl -fsSL https://get.pulumi.com | sh -s -- --version $PULUMI_VERSION --install-root /tmp/pulumi"
            - Run: du -sh /tmp/pulumi
            - Run: npm exec pnpm list
            - Run: du -sh node_modules /tmp/npm-global /tmp/pnpm-store
      Compile:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 8
        Caching:
          FileCaching:
            a64_npm_global:
              Path: /tmp/npm-global
              RestoreKeys:
                - npminstall
            a64_pnpm_store:
              Path: /tmp/pnpm-store
              RestoreKeys:
                - pnpminstall
            a64_nx:
              Path: /tmp/nx-cache
              RestoreKeys:
                - nx
        Inputs:
          Sources:
            - WorkflowSource
        Outputs:
          AutoDiscoverReports:
            Enabled: true
            ReportNamePrefix: junit
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: npm config set prefix=/tmp/npm-global
            - Run: npm exec n 22
            - Run: npm exec pnpm config set store-dir /tmp/pnpm-store
            - Run: npm exec pnpm install --prefer-offline
            - Run: npm exec pnpm build
            - Run: npm exec pnpm lint
            - Run: npm exec pnpm test
            - Run: du -sh $(pwd)/**/module $(pwd)/**/commonjs || true
      Image:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 10
        Caching:
          FileCaching:
            a64_npm_global:
              Path: /tmp/npm-global
              RestoreKeys:
                - npminstall
            a64_pnpm_store:
              Path: /tmp/pnpm-store
              RestoreKeys:
                - pnpminstall
            a64_nx:
              Path: /tmp/nx-cache
              RestoreKeys:
                - nx
            a64_docker:
              Path: /tmp/docker-cache
              RestoreKeys:
                - docker
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: APPLICATION_IMAGE_NAME
              Value: spork
        Outputs:
          Artifacts:
            - Name: images
              Files:
                - _images/**/*
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: docker load --input /tmp/docker-cache/images/cli-pack.tar.gz || true
            - Run: docker load --input /tmp/docker-cache/images/builder.tar.gz || true
            - Run: docker load --input /tmp/docker-cache/images/launcher.tar.gz || true
            - Run: mkdir -p _images
            - Run: npm config set prefix=/tmp/npm-global
            - Run: npm exec n 22
            - Run: npm exec pnpm config set store-dir /tmp/pnpm-store
            - Run: npm exec pnpm install --prefer-offline
            - Run: npm exec pnpm exec nx pack:build iac-images-application --verbose
            - Run: docker save $APPLICATION_IMAGE_NAME | gzip > _images/application.tar.gz
            - Run: du -sh _images/application.tar.gz
            - Run: ls -la _images
      Preview:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Image
        Timeout: 10
        Environment:
          Name: current
        Caching:
          FileCaching:
            a64_npm_global:
              Path: /tmp/npm-global
              RestoreKeys:
                - npminstall
            a64_pnpm_store:
              Path: /tmp/pnpm-store
              RestoreKeys:
                - pnpminstall
            a64_nx:
              Path: /tmp/nx-cache
              RestoreKeys:
                - nx
            a64_pulumi:
              Path: /tmp/pulumi
              RestoreKeys:
                - pulumi
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: APPLICATION_IMAGE_NAME
              Value: spork
            - Name: BRANCH_NAME
              Value: ${BranchName}
            - Name: COMMIT_ID
              Value: ${CommitId}
            - Name: CI_ENVIRONMENT
              Value: current
            - Name: AWS_REGION
              Value: us-west-2
            - Name: PULUMI_HOME
              Value: /tmp/pulumi
            - Name: PULUMI_CONFIG_PASSPHRASE
              Value: ${{ Secrets.PULUMI_CONFIG_PASSPHRASE }}
          Artifacts:
            - images
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: npm config set prefix=/tmp/npm-global
            - Run: npm exec pnpm config set store-dir /tmp/pnpm-store
            - Run: npm exec n 22
            - Run: npm exec pnpm install --prefer-offline
            - Run: npm exec pnpm build
            - Run: ls -la $CATALYST_SOURCE_DIR_images/_images
            - Run: docker load --input $CATALYST_SOURCE_DIR_images/_images/application.tar.gz
            - Run: docker images
            - Run: aws ssm get-parameter --name /fourtwo/_principal/pulumi/backend/StateBackendCommandReference
            - Run: npm exec pnpm exec fourtwo aws pulumi ci -- --region $AWS_REGION > .pulumi-ci
            - Run: cat .pulumi-ci
            - Run: cat .pulumi-ci | grep "export" >> .export-cd
            - Run: cat .export-cd
            - Run: source .export-cd
            - Run: /tmp/pulumi/bin/pulumi stack init "$APPLICATION_IMAGE_NAME-code.$CI_ENVIRONMENT" -C $(pwd)/iac/stacks/code || true
            - Run: /tmp/pulumi/bin/pulumi stack select "$APPLICATION_IMAGE_NAME-code.$CI_ENVIRONMENT" -C $(pwd)/iac/stacks/code || true
            - Run: /tmp/pulumi/bin/pulumi config set aws:skipMetadataApiCheck false -C $(pwd)/iac/stacks/code
            - Run: /tmp/pulumi/bin/pulumi config set --path context:stack.environment.isProd false -C $(pwd)/iac/stacks/code
            - Run: /tmp/pulumi/bin/pulumi config set --path context:stack.environment.features aws -C $(pwd)/iac/stacks/code
            - Run: /tmp/pulumi/bin/pulumi config set --path 'frontend:stack.dns.hostnames[0]' "$CI_ENVIRONMENT.$APPLICATION_IMAGE_NAME.cloud.$HOSTNAME" -C $(pwd)/iac/stacks/code
            - Run: /tmp/pulumi/bin/pulumi stack change-secrets-provider $AWS_PROVIDER_KEY -C $(pwd)/iac/stacks/code
            - Run: /tmp/pulumi/bin/pulumi preview -C $(pwd)/iac/stacks/code  --show-replacement-steps --json --suppress-progress --non-interactive --diff --message "$BRANCH_NAME-$COMMIT_ID"
            - Run: /tmp/pulumi/bin/pulumi up -C $(pwd)/iac/stacks/code --yes --suppress-progress --non-interactive --diff --message "$BRANCH_NAME-$COMMIT_ID"

########################################
########################################
#**:_$~- {"$$":"head","filename":"[push(b:main)]CI.yml","source":"iac/workflows/codecatalyst/push/CI.js"}
#**:_$~- {"$$":"script","generator":"codegen/codecatalyst/GenerateCodeCatalystWorkflow.mjs"}
#**:_$~- {"$$":"body","hashed":"5c9bee881c5a259b7662cb802d35e8c0988a0391747176f118909f78d38199dd"}
#**:_$~- {"$$":"footer","started":"2025-01-08T16:56:30.011Z","now":"2025-01-08T16:56:30.018Z","elapsed":"7ms"}
# END OF GENERATED FILE

