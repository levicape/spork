########################################
# THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY
########################################
Name: Main__Image_Preview__current
RunMode: SUPERSEDED
SchemaVersion: "1.0"
Compute:
  Type: EC2
  Fleet: Linux.Arm64.XLarge
Triggers:
  - Type: PULLREQUEST
    Events:
      - OPEN
      - REVISION
    Branches:
      - main
Actions:
  Integration:
    Actions:
      Install:
        Identifier: aws/build@v1.0.0
        Timeout: 23
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_docker:
              Path: /cc/cache/docker
              RestoreKeys:
                - docker
            a64_pulumi:
              Path: /cc/cache/pulumi
              RestoreKeys:
                - pulumi
            a64_python:
              Path: /cc/cache/pyenv
              RestoreKeys:
                - python
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.12.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: AWS_REGION
              Value: us-west-2
            - Name: FRONTEND_HOSTNAME
              Value: spork.levicape.cloud
            - Name: PULUMI_CONFIG_PASSPHRASE
              Value: ${{ Secrets.PULUMI_CONFIG_PASSPHRASE }}
            - Name: PULUMI_HOME
              Value: /cc/cache/pulumi
            - Name: PULUMI_VERSION
              Value: 3.147.0
            - Name: PYTHON
              Value: /cc/cache/pyenv/shims/python3
            - Name: PYENV_ROOT
              Value: /cc/cache/pyenv
            - Name: PYTHON_VERSION
              Value: 3.11.6
            - Name: PAKETO_CLI_IMAGE
              Value: buildpacksio/pack:latest
            - Name: PAKETO_BUILDER_IMAGE
              Value: heroku/builder:24
            - Name: PAKETO_LAUNCHER_IMAGE
              Value: heroku/heroku:24
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: mkdir -p /cc/cache/nodejs
            - Run: mkdir -p /cc/cache/docker
            - Run: mkdir -p /cc/cache/pulumi
            - Run: mkdir -p /cc/cache/nodejs/corepack
            - Run: mkdir -p /cc/cache/nodejs/npm
            - Run: mkdir -p /cc/cache/nodejs/pnpmcache
            - Run: mkdir -p /cc/cache/nodejs/addressable
            - Run: mkdir -p /cc/cache/nodejs/pnpmglobal
            - Run: mkdir -p /cc/cache/nodejs/nxcache
            - Run: mkdir -p /cc/cache/docker/images
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project
            - Run: npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: sudo npm config set prefix=/cc/cache/nodejs/npm
            - Run: sudo corepack -g install $PNPM_VERSION
            - Run: sudo corepack enable pnpm
            - Run: sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: sudo pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: sudo pnpx n $NODEJS_VERSION
            - Run: npm config set prefix=/cc/cache/nodejs/npm
            - Run: corepack -g install $PNPM_VERSION
            - Run: corepack enable pnpm
            - Run: pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: pnpx n $NODEJS_VERSION
            - Run: sudo npm root -g
            - Run: pnpm install --ignore-scripts
            - Run: echo $PNPM_HOME
            - Run: pnpm list
            - Run: du -sh node_modules || true
            - Run: "ls -la node_modules || true "
            - Run: du -sh /cc/cache/nodejs/corepack || true
            - Run: "ls -la /cc/cache/nodejs/corepack || true "
            - Run: du -sh /cc/cache/nodejs/npm || true
            - Run: "ls -la /cc/cache/nodejs/npm || true "
            - Run: du -sh /cc/cache/nodejs/pnpmcache || true
            - Run: "ls -la /cc/cache/nodejs/pnpmcache || true "
            - Run: du -sh /cc/cache/nodejs/addressable || true
            - Run: "ls -la /cc/cache/nodejs/addressable || true "
            - Run: du -sh /cc/cache/nodejs/pnpmglobal || true
            - Run: "ls -la /cc/cache/nodejs/pnpmglobal || true "
            - Run: du -sh /cc/cache/nodejs/nxcache || true
            - Run: "ls -la /cc/cache/nodejs/nxcache || true "
            - Run: curl -fsSL https://pyenv.run | bash || true
            - Run: '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"'
            - Run: which pyenv || true
            - Run: eval "$(pyenv init - || true)"
            - Run: git clone https://github.com/pyenv/pyenv-update.git $(pyenv root)/plugins/pyenv-update || true
            - Run: pyenv update || true
            - Run: pyenv install $PYTHON_VERSION || true
            - Run: pyenv global $PYTHON_VERSION || true
            - Run: pyenv versions || true
            - Run: du -sh $PYENV_ROOT
            - Run: python3 -m pip install -r requirements.txt
            - Run: docker load --input /cc/cache/docker/images/cli-pack.tar.gz || true
            - Run: docker pull $PAKETO_CLI_IMAGE
            - Run: docker save $PAKETO_CLI_IMAGE | gzip > /cc/cache/docker/images/cli-pack.tar.gz
            - Run: du -sh /cc/cache/docker/images/cli-pack.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/builder.tar.gz || true
            - Run: docker pull $PAKETO_BUILDER_IMAGE
            - Run: docker save $PAKETO_BUILDER_IMAGE | gzip > /cc/cache/docker/images/builder.tar.gz
            - Run: du -sh /cc/cache/docker/images/builder.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/launcher.tar.gz || true
            - Run: docker pull $PAKETO_LAUNCHER_IMAGE
            - Run: docker save $PAKETO_LAUNCHER_IMAGE | gzip > /cc/cache/docker/images/launcher.tar.gz
            - Run: du -sh /cc/cache/docker/images/launcher.tar.gz || true
            - Run: "[ -f /cc/cache/pulumi/bin/pulumi ] && /cc/cache/pulumi/bin/pulumi version | grep $PULUMI_VERSION || curl -fsSL https://get.pulumi.com | sh -s -- --version $PULUMI_VERSION --install-root /cc/cache/pulumi"
            - Run: du -sh /cc/cache/pulumi
      Compile:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 19
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_python:
              Path: /cc/cache/pyenv
              RestoreKeys:
                - python
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.12.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: PYTHON
              Value: /cc/cache/pyenv/shims/python3
            - Name: PYENV_ROOT
              Value: /cc/cache/pyenv
            - Name: PYTHON_VERSION
              Value: 3.11.6
        Outputs:
          AutoDiscoverReports:
            Enabled: true
            ReportNamePrefix: junit
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project
            - Run: npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: sudo npm config set prefix=/cc/cache/nodejs/npm
            - Run: sudo corepack -g install $PNPM_VERSION
            - Run: sudo corepack enable pnpm
            - Run: sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: sudo pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: sudo pnpx n $NODEJS_VERSION
            - Run: npm config set prefix=/cc/cache/nodejs/npm
            - Run: corepack -g install $PNPM_VERSION
            - Run: corepack enable pnpm
            - Run: pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: pnpx n $NODEJS_VERSION
            - Run: pnpm install --prefer-offline --ignore-scripts
            - Run: python3 -c "print('ok')" || true
            - Run: pnpm rebuild || true
            - Run: pnpm build
            - Run: pnpm lint
            - Run: pnpm test
            - Run: du -sh $(pwd)/**/module || true
            - Run: du -sh $(pwd)/**/commonjs || true
            - Run: du -sh $(pwd)/**/gen || true
            - Run: du -sh $(pwd)/**/output || true
      Image:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 19
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_docker:
              Path: /cc/cache/docker
              RestoreKeys:
                - docker
            a64_python:
              Path: /cc/cache/pyenv
              RestoreKeys:
                - python
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.12.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: PYTHON
              Value: /cc/cache/pyenv/shims/python3
            - Name: PYENV_ROOT
              Value: /cc/cache/pyenv
            - Name: PYTHON_VERSION
              Value: 3.11.6
            - Name: APPLICATION_IMAGE_NAME
              Value: spork
        Outputs:
          Artifacts:
            - Name: images
              Files:
                - _images/**/*
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: docker load --input /cc/cache/docker/images/cli-pack.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/builder.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/launcher.tar.gz || true
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project
            - Run: npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: sudo npm config set prefix=/cc/cache/nodejs/npm
            - Run: sudo corepack -g install $PNPM_VERSION
            - Run: sudo corepack enable pnpm
            - Run: sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: sudo pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: sudo pnpx n $NODEJS_VERSION
            - Run: npm config set prefix=/cc/cache/nodejs/npm
            - Run: corepack -g install $PNPM_VERSION
            - Run: corepack enable pnpm
            - Run: pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: pnpx n $NODEJS_VERSION
            - Run: pnpm install --prefer-offline --ignore-scripts
            - Run: sudo yum install -y make cmake zip unzip automake autoconf || true
            - Run: sudo yum install -y zlib bzip2 || true
            - Run: sudo yum install -y g++ libcurl-devel libtool || true
            - Run: sudo yum install -y protobuf protobuf-devel protobuf-compiler || true
            - Run: sudo yum install -y sqlite sqlite-devel sqlite-libs sqlite-tools || true
            - Run: sudo yum install -y jq || true
            - Run: pnpm rebuild || true
            - Run: pnpm exec nx pack:build iac-images-application --verbose
            - Run: mkdir -p _images
            - Run: docker save $APPLICATION_IMAGE_NAME | gzip > _images/application.tar.gz
            - Run: du -sh _images/application.tar.gz
            - Run: ls -la _images
      Preview:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 19
        Environment:
          Name: current
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_pulumi:
              Path: /cc/cache/pulumi
              RestoreKeys:
                - pulumi
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.12.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: AWS_REGION
              Value: us-west-2
            - Name: FRONTEND_HOSTNAME
              Value: spork.levicape.cloud
            - Name: PULUMI_CONFIG_PASSPHRASE
              Value: ${{ Secrets.PULUMI_CONFIG_PASSPHRASE }}
            - Name: PULUMI_HOME
              Value: /cc/cache/pulumi
            - Name: PULUMI_VERSION
              Value: 3.147.0
            - Name: APPLICATION_IMAGE_NAME
              Value: spork
            - Name: CI_ENVIRONMENT
              Value: current
        Outputs:
          Artifacts:
            - Name: pulumi
              Files:
                - _pulumi/**/*
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project
            - Run: npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: sudo npm config set prefix=/cc/cache/nodejs/npm
            - Run: sudo corepack -g install $PNPM_VERSION
            - Run: sudo corepack enable pnpm
            - Run: sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: sudo pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: sudo pnpx n $NODEJS_VERSION
            - Run: npm config set prefix=/cc/cache/nodejs/npm
            - Run: corepack -g install $PNPM_VERSION
            - Run: corepack enable pnpm
            - Run: pnpm config set cache-dir /cc/cache/nodejs/pnpmcache
            - Run: pnpm config set global-dir /cc/cache/nodejs/pnpmglobal
            - Run: pnpm config set store-dir /cc/cache/nodejs/addressable
            - Run: pnpx n $NODEJS_VERSION
            - Run: pnpm install --prefer-offline --ignore-scripts
            - Run: aws ssm get-parameter --name /fourtwo/_principal/pulumi/backend/StateBackendCommandReference
            - Run: pnpm exec fourtwo aws pulumi ci --region $AWS_REGION > .pulumi-ci
            - Run: cat .pulumi-ci
            - Run: cat .pulumi-ci | grep "export" >> .export-cd
            - Run: cat .export-cd
            - Run: source .export-cd
            - Run: echo $AWS_PROVIDER_KEY
            - Run: mkdir -p _pulumi || true
            - Run: 'echo "Deploying onto root: spork"'
            - Run: 'echo "Deploying: Stack: spork-codestar.current. CWD: $(pwd)/iac/stacks/src/codestar. Output: _pulumi/codestar."'
            - Run: 'echo "name: spork-codestar" >> $(pwd)/iac/stacks/src/codestar/Pulumi.yaml'
            - Run: cat $(pwd)/iac/stacks/src/codestar/Pulumi.yaml $(pwd)/iac/stacks/src/codestar/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi stack init spork-codestar.current -C $(pwd)/iac/stacks/src/codestar || true
            - Run: /cc/cache/pulumi/bin/pulumi stack select spork-codestar.current -C $(pwd)/iac/stacks/src/codestar || true
            - Run: /cc/cache/pulumi/bin/pulumi config set --path aws:skipMetadataApiCheck false -C $(pwd)/iac/stacks/src/codestar
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.isProd false -C $(pwd)/iac/stacks/src/codestar
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.features aws -C $(pwd)/iac/stacks/src/codestar
            - Run: /cc/cache/pulumi/bin/pulumi config set --path frontend:stack.dns.hostnames[0] spork.cloud.$FRONTEND_HOSTNAME -C $(pwd)/iac/stacks/src/codestar
            - Run: /cc/cache/pulumi/bin/pulumi stack change-secrets-provider $AWS_PROVIDER_KEY -C $(pwd)/iac/stacks/src/codestar
            - Run: cat $(pwd)/iac/stacks/src/codestar/Pulumi.yaml $(pwd)/iac/stacks/src/codestar/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi refresh --yes --skip-preview --clear-pending-creates --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-refresh" -C $(pwd)/iac/stacks/src/codestar --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi preview --show-replacement-steps --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-preview" -C $(pwd)/iac/stacks/src/codestar --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/codestar --json > $(pwd)/_pulumi/codestar.json
            - Run: cat _pulumi/codestar.json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/codestar --shell > $(pwd)/_pulumi/codestar.sh
            - Run: cat _pulumi/codestar.sh
            - Run: 'echo "Deploying: Stack: spork-datalayer.current. CWD: $(pwd)/iac/stacks/src/datalayer. Output: _pulumi/datalayer."'
            - Run: 'echo "name: spork-datalayer" >> $(pwd)/iac/stacks/src/datalayer/Pulumi.yaml'
            - Run: cat $(pwd)/iac/stacks/src/datalayer/Pulumi.yaml $(pwd)/iac/stacks/src/datalayer/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi stack init spork-datalayer.current -C $(pwd)/iac/stacks/src/datalayer || true
            - Run: /cc/cache/pulumi/bin/pulumi stack select spork-datalayer.current -C $(pwd)/iac/stacks/src/datalayer || true
            - Run: /cc/cache/pulumi/bin/pulumi config set --path aws:skipMetadataApiCheck false -C $(pwd)/iac/stacks/src/datalayer
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.isProd false -C $(pwd)/iac/stacks/src/datalayer
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.features aws -C $(pwd)/iac/stacks/src/datalayer
            - Run: /cc/cache/pulumi/bin/pulumi config set --path frontend:stack.dns.hostnames[0] spork.cloud.$FRONTEND_HOSTNAME -C $(pwd)/iac/stacks/src/datalayer
            - Run: /cc/cache/pulumi/bin/pulumi stack change-secrets-provider $AWS_PROVIDER_KEY -C $(pwd)/iac/stacks/src/datalayer
            - Run: cat $(pwd)/iac/stacks/src/datalayer/Pulumi.yaml $(pwd)/iac/stacks/src/datalayer/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi refresh --yes --skip-preview --clear-pending-creates --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-refresh" -C $(pwd)/iac/stacks/src/datalayer --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi preview --show-replacement-steps --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-preview" -C $(pwd)/iac/stacks/src/datalayer --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/datalayer --json > $(pwd)/_pulumi/datalayer.json
            - Run: cat _pulumi/datalayer.json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/datalayer --shell > $(pwd)/_pulumi/datalayer.sh
            - Run: cat _pulumi/datalayer.sh
            - Run: 'echo "Deploying: Stack: spork-http.current. CWD: $(pwd)/iac/stacks/src/http. Output: _pulumi/http."'
            - Run: 'echo "name: spork-http" >> $(pwd)/iac/stacks/src/http/Pulumi.yaml'
            - Run: cat $(pwd)/iac/stacks/src/http/Pulumi.yaml $(pwd)/iac/stacks/src/http/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi stack init spork-http.current -C $(pwd)/iac/stacks/src/http || true
            - Run: /cc/cache/pulumi/bin/pulumi stack select spork-http.current -C $(pwd)/iac/stacks/src/http || true
            - Run: /cc/cache/pulumi/bin/pulumi config set --path aws:skipMetadataApiCheck false -C $(pwd)/iac/stacks/src/http
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.isProd false -C $(pwd)/iac/stacks/src/http
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.features aws -C $(pwd)/iac/stacks/src/http
            - Run: /cc/cache/pulumi/bin/pulumi config set --path frontend:stack.dns.hostnames[0] spork.cloud.$FRONTEND_HOSTNAME -C $(pwd)/iac/stacks/src/http
            - Run: /cc/cache/pulumi/bin/pulumi stack change-secrets-provider $AWS_PROVIDER_KEY -C $(pwd)/iac/stacks/src/http
            - Run: cat $(pwd)/iac/stacks/src/http/Pulumi.yaml $(pwd)/iac/stacks/src/http/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi refresh --yes --skip-preview --clear-pending-creates --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-refresh" -C $(pwd)/iac/stacks/src/http --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi preview --show-replacement-steps --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-preview" -C $(pwd)/iac/stacks/src/http --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/http --json > $(pwd)/_pulumi/http.json
            - Run: cat _pulumi/http.json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/http --shell > $(pwd)/_pulumi/http.sh
            - Run: cat _pulumi/http.sh
            - Run: 'echo "Deploying: Stack: spork-magmap-http.current. CWD: $(pwd)/iac/stacks/src/domains/magmap/http. Output: _pulumi/domains_magmap_http."'
            - Run: 'echo "name: spork-magmap-http" >> $(pwd)/iac/stacks/src/domains/magmap/http/Pulumi.yaml'
            - Run: cat $(pwd)/iac/stacks/src/domains/magmap/http/Pulumi.yaml $(pwd)/iac/stacks/src/domains/magmap/http/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi stack init spork-magmap-http.current -C $(pwd)/iac/stacks/src/domains/magmap/http || true
            - Run: /cc/cache/pulumi/bin/pulumi stack select spork-magmap-http.current -C $(pwd)/iac/stacks/src/domains/magmap/http || true
            - Run: /cc/cache/pulumi/bin/pulumi config set --path aws:skipMetadataApiCheck false -C $(pwd)/iac/stacks/src/domains/magmap/http
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.isProd false -C $(pwd)/iac/stacks/src/domains/magmap/http
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.features aws -C $(pwd)/iac/stacks/src/domains/magmap/http
            - Run: /cc/cache/pulumi/bin/pulumi config set --path frontend:stack.dns.hostnames[0] spork.cloud.$FRONTEND_HOSTNAME -C $(pwd)/iac/stacks/src/domains/magmap/http
            - Run: /cc/cache/pulumi/bin/pulumi stack change-secrets-provider $AWS_PROVIDER_KEY -C $(pwd)/iac/stacks/src/domains/magmap/http
            - Run: cat $(pwd)/iac/stacks/src/domains/magmap/http/Pulumi.yaml $(pwd)/iac/stacks/src/domains/magmap/http/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi refresh --yes --skip-preview --clear-pending-creates --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-refresh" -C $(pwd)/iac/stacks/src/domains/magmap/http --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi preview --show-replacement-steps --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-preview" -C $(pwd)/iac/stacks/src/domains/magmap/http --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/domains/magmap/http --json > $(pwd)/_pulumi/domains_magmap_http.json
            - Run: cat _pulumi/domains_magmap_http.json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/domains/magmap/http --shell > $(pwd)/_pulumi/domains_magmap_http.sh
            - Run: cat _pulumi/domains_magmap_http.sh
            - Run: 'echo "Deploying: Stack: spork-magmap-web.current. CWD: $(pwd)/iac/stacks/src/domains/magmap/web. Output: _pulumi/domains_magmap_web."'
            - Run: 'echo "name: spork-magmap-web" >> $(pwd)/iac/stacks/src/domains/magmap/web/Pulumi.yaml'
            - Run: cat $(pwd)/iac/stacks/src/domains/magmap/web/Pulumi.yaml $(pwd)/iac/stacks/src/domains/magmap/web/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi stack init spork-magmap-web.current -C $(pwd)/iac/stacks/src/domains/magmap/web || true
            - Run: /cc/cache/pulumi/bin/pulumi stack select spork-magmap-web.current -C $(pwd)/iac/stacks/src/domains/magmap/web || true
            - Run: /cc/cache/pulumi/bin/pulumi config set --path aws:skipMetadataApiCheck false -C $(pwd)/iac/stacks/src/domains/magmap/web
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.isProd false -C $(pwd)/iac/stacks/src/domains/magmap/web
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.features aws -C $(pwd)/iac/stacks/src/domains/magmap/web
            - Run: /cc/cache/pulumi/bin/pulumi config set --path frontend:stack.dns.hostnames[0] spork.cloud.$FRONTEND_HOSTNAME -C $(pwd)/iac/stacks/src/domains/magmap/web
            - Run: /cc/cache/pulumi/bin/pulumi stack change-secrets-provider $AWS_PROVIDER_KEY -C $(pwd)/iac/stacks/src/domains/magmap/web
            - Run: cat $(pwd)/iac/stacks/src/domains/magmap/web/Pulumi.yaml $(pwd)/iac/stacks/src/domains/magmap/web/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi refresh --yes --skip-preview --clear-pending-creates --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-refresh" -C $(pwd)/iac/stacks/src/domains/magmap/web --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi preview --show-replacement-steps --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-preview" -C $(pwd)/iac/stacks/src/domains/magmap/web --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/domains/magmap/web --json > $(pwd)/_pulumi/domains_magmap_web.json
            - Run: cat _pulumi/domains_magmap_web.json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/domains/magmap/web --shell > $(pwd)/_pulumi/domains_magmap_web.sh
            - Run: cat _pulumi/domains_magmap_web.sh
            - Run: 'echo "Deploying: Stack: spork-magmap-monitor.current. CWD: $(pwd)/iac/stacks/src/domains/magmap/monitor. Output: _pulumi/domains_magmap_monitor."'
            - Run: 'echo "name: spork-magmap-monitor" >> $(pwd)/iac/stacks/src/domains/magmap/monitor/Pulumi.yaml'
            - Run: cat $(pwd)/iac/stacks/src/domains/magmap/monitor/Pulumi.yaml $(pwd)/iac/stacks/src/domains/magmap/monitor/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi stack init spork-magmap-monitor.current -C $(pwd)/iac/stacks/src/domains/magmap/monitor || true
            - Run: /cc/cache/pulumi/bin/pulumi stack select spork-magmap-monitor.current -C $(pwd)/iac/stacks/src/domains/magmap/monitor || true
            - Run: /cc/cache/pulumi/bin/pulumi config set --path aws:skipMetadataApiCheck false -C $(pwd)/iac/stacks/src/domains/magmap/monitor
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.isProd false -C $(pwd)/iac/stacks/src/domains/magmap/monitor
            - Run: /cc/cache/pulumi/bin/pulumi config set --path context:stack.environment.features aws -C $(pwd)/iac/stacks/src/domains/magmap/monitor
            - Run: /cc/cache/pulumi/bin/pulumi config set --path frontend:stack.dns.hostnames[0] spork.cloud.$FRONTEND_HOSTNAME -C $(pwd)/iac/stacks/src/domains/magmap/monitor
            - Run: /cc/cache/pulumi/bin/pulumi stack change-secrets-provider $AWS_PROVIDER_KEY -C $(pwd)/iac/stacks/src/domains/magmap/monitor
            - Run: cat $(pwd)/iac/stacks/src/domains/magmap/monitor/Pulumi.yaml $(pwd)/iac/stacks/src/domains/magmap/monitor/Pulumi.*.yaml || true;
            - Run: /cc/cache/pulumi/bin/pulumi refresh --yes --skip-preview --clear-pending-creates --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-refresh" -C $(pwd)/iac/stacks/src/domains/magmap/monitor --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi preview --show-replacement-steps --message "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}-preview" -C $(pwd)/iac/stacks/src/domains/magmap/monitor --non-interactive --suppress-progress --diff --json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/domains/magmap/monitor --json > $(pwd)/_pulumi/domains_magmap_monitor.json
            - Run: cat _pulumi/domains_magmap_monitor.json
            - Run: /cc/cache/pulumi/bin/pulumi stack output -C $(pwd)/iac/stacks/src/domains/magmap/monitor --shell > $(pwd)/_pulumi/domains_magmap_monitor.sh
            - Run: cat _pulumi/domains_magmap_monitor.sh
            - Run: du -sh _pulumi

########################################
########################################
#**:_$~- {"$$":"head","filename":"[pr(OPEN,REVISION)(b:main)]CI.yml","source":"iac/workflows/codecatalyst/push/CI.js"}
#**:_$~- {"$$":"script","generator":"codegen/codecatalyst/GenerateCodeCatalystWorkflow.mjs"}
#**:_$~- {"$$":"body","hashed":"5ec56440771dce316af4283af36072cf1bffa05c334bc34fca9e53aace0be793"}
#**:_$~- {"$$":"footer","started":"2025-02-19T08:16:34.372Z","now":"2025-02-19T08:16:34.376Z","elapsed":"4ms"}
# END OF GENERATED FILE

