########################################
# THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY
########################################
Name: Main__Image_Preview_Deploy__current
RunMode: SUPERSEDED
SchemaVersion: "1.0"
Compute:
  Type: EC2
  Fleet: Linux.Arm64.XLarge
Triggers:
  - Type: SCHEDULE
    Expression: 0 0 * * ? *
    Branches:
      - main
Actions:
  Integration:
    Actions:
      Install:
        Identifier: aws/build@v1.0.0
        Timeout: 23
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_docker:
              Path: /cc/cache/docker
              RestoreKeys:
                - docker
            a64_pulumi:
              Path: /cc/cache/pulumi
              RestoreKeys:
                - pulumi
            a64_python:
              Path: /cc/cache/pyenv
              RestoreKeys:
                - python
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.13.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: AWS_REGION
              Value: us-west-2
            - Name: FRONTEND_HOSTNAME
              Value: spork.levicape.cloud
            - Name: PULUMI_CONFIG_PASSPHRASE
              Value: ${{ Secrets.PULUMI_CONFIG_PASSPHRASE }}
            - Name: PULUMI_HOME
              Value: /cc/cache/pulumi
            - Name: PULUMI_VERSION
              Value: 3.152.0
            - Name: PYTHON
              Value: /cc/cache/pyenv/shims/python3
            - Name: PYENV_ROOT
              Value: /cc/cache/pyenv
            - Name: PYTHON_VERSION
              Value: 3.11.6
            - Name: PAKETO_CLI_IMAGE
              Value: buildpacksio/pack:latest
            - Name: PAKETO_BUILDER_IMAGE
              Value: heroku/builder:24
            - Name: PAKETO_LAUNCHER_IMAGE
              Value: heroku/heroku:24
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: mkdir -p /cc/cache/nodejs
            - Run: mkdir -p /cc/cache/docker
            - Run: mkdir -p /cc/cache/pulumi
            - Run: mkdir -p /cc/cache/nodejs/corepack
            - Run: mkdir -p /cc/cache/nodejs/npm
            - Run: mkdir -p /cc/cache/nodejs/pnpmcache
            - Run: mkdir -p /cc/cache/nodejs/addressable
            - Run: mkdir -p /cc/cache/nodejs/pnpmglobal
            - Run: mkdir -p /cc/cache/nodejs/nxcache
            - Run: mkdir -p /cc/cache/docker/images
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project; npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: sudo npm root -g
            - Run: pnpm install --ignore-scripts
            - Run: echo $PNPM_HOME
            - Run: pnpm list
            - Run: du -sh node_modules || true
            - Run: "ls -la node_modules || true "
            - Run: du -sh /cc/cache/nodejs/corepack || true
            - Run: "ls -la /cc/cache/nodejs/corepack || true "
            - Run: du -sh /cc/cache/nodejs/npm || true
            - Run: "ls -la /cc/cache/nodejs/npm || true "
            - Run: du -sh /cc/cache/nodejs/pnpmcache || true
            - Run: "ls -la /cc/cache/nodejs/pnpmcache || true "
            - Run: du -sh /cc/cache/nodejs/addressable || true
            - Run: "ls -la /cc/cache/nodejs/addressable || true "
            - Run: du -sh /cc/cache/nodejs/pnpmglobal || true
            - Run: "ls -la /cc/cache/nodejs/pnpmglobal || true "
            - Run: du -sh /cc/cache/nodejs/nxcache || true
            - Run: "ls -la /cc/cache/nodejs/nxcache || true "
            - Run: curl -fsSL https://pyenv.run | bash || true
            - Run: '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"'
            - Run: which pyenv || true
            - Run: eval "$(pyenv init - || true)"
            - Run: git clone https://github.com/pyenv/pyenv-update.git $(pyenv root)/plugins/pyenv-update || true
            - Run: pyenv update || true
            - Run: pyenv install $PYTHON_VERSION || true
            - Run: pyenv global $PYTHON_VERSION || true
            - Run: pyenv versions || true
            - Run: du -sh $PYENV_ROOT
            - Run: python3 -m pip install -r requirements.txt
            - Run: docker load --input /cc/cache/docker/images/cli-pack.tar.gz || true
            - Run: docker pull $PAKETO_CLI_IMAGE
            - Run: docker save $PAKETO_CLI_IMAGE | gzip > /cc/cache/docker/images/cli-pack.tar.gz
            - Run: du -sh /cc/cache/docker/images/cli-pack.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/builder.tar.gz || true
            - Run: docker pull $PAKETO_BUILDER_IMAGE
            - Run: docker save $PAKETO_BUILDER_IMAGE | gzip > /cc/cache/docker/images/builder.tar.gz
            - Run: du -sh /cc/cache/docker/images/builder.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/launcher.tar.gz || true
            - Run: docker pull $PAKETO_LAUNCHER_IMAGE
            - Run: docker save $PAKETO_LAUNCHER_IMAGE | gzip > /cc/cache/docker/images/launcher.tar.gz
            - Run: du -sh /cc/cache/docker/images/launcher.tar.gz || true
            - Run: "[ -f /cc/cache/pulumi/bin/pulumi ] && /cc/cache/pulumi/bin/pulumi version | grep $PULUMI_VERSION || curl -fsSL https://get.pulumi.com | sh -s -- --version $PULUMI_VERSION --install-root /cc/cache/pulumi"
            - Run: du -sh /cc/cache/pulumi
      Compile:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 19
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_python:
              Path: /cc/cache/pyenv
              RestoreKeys:
                - python
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.13.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: PYTHON
              Value: /cc/cache/pyenv/shims/python3
            - Name: PYENV_ROOT
              Value: /cc/cache/pyenv
            - Name: PYTHON_VERSION
              Value: 3.11.6
        Outputs:
          AutoDiscoverReports:
            Enabled: true
            ReportNamePrefix: junit
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project; npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: pnpm install --prefer-offline --ignore-scripts
            - Run: python3 -c "print('ok')" || true
            - Run: pnpm rebuild || true
            - Run: pnpm build
            - Run: pnpm lint
            - Run: pnpm test
            - Run: du -sh $(pwd)/**/module || true
            - Run: du -sh $(pwd)/**/commonjs || true
            - Run: du -sh $(pwd)/**/gen || true
            - Run: du -sh $(pwd)/**/output || true
      Image:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 19
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_docker:
              Path: /cc/cache/docker
              RestoreKeys:
                - docker
            a64_python:
              Path: /cc/cache/pyenv
              RestoreKeys:
                - python
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.13.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: PYTHON
              Value: /cc/cache/pyenv/shims/python3
            - Name: PYENV_ROOT
              Value: /cc/cache/pyenv
            - Name: PYTHON_VERSION
              Value: 3.11.6
            - Name: APPLICATION_IMAGE_NAME
              Value: spork
        Outputs:
          Artifacts:
            - Name: images
              Files:
                - _images/**/*
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: docker load --input /cc/cache/docker/images/cli-pack.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/builder.tar.gz || true
            - Run: docker load --input /cc/cache/docker/images/launcher.tar.gz || true
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project; npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: pnpm install --prefer-offline --ignore-scripts
            - Run: sudo yum install -y make cmake zip unzip automake autoconf || true
            - Run: sudo yum install -y zlib bzip2 || true
            - Run: sudo yum install -y g++ libcurl-devel libtool || true
            - Run: sudo yum install -y protobuf protobuf-devel protobuf-compiler || true
            - Run: sudo yum install -y sqlite sqlite-devel sqlite-libs sqlite-tools || true
            - Run: sudo yum install -y jq || true
            - Run: pnpm rebuild || true
            - Run: pnpm exec nx pack:build iac-images-application --verbose
            - Run: mkdir -p _images
            - Run: docker save $APPLICATION_IMAGE_NAME | gzip > _images/application.tar.gz
            - Run: du -sh _images/application.tar.gz
            - Run: ls -la _images
      Deploy:
        Identifier: aws/build@v1.0.0
        DependsOn:
          - Install
        Timeout: 19
        Environment:
          Name: current
        Caching:
          FileCaching:
            a64_nodejs:
              Path: /cc/cache/nodejs
              RestoreKeys:
                - nodejs
            a64_pulumi:
              Path: /cc/cache/pulumi
              RestoreKeys:
                - pulumi
        Inputs:
          Sources:
            - WorkflowSource
          Variables:
            - Name: COREPACK_HOME
              Value: /cc/cache/nodejs/corepack
            - Name: PNPM_VERSION
              Value: pnpm@9.15.4
            - Name: NODEJS_VERSION
              Value: 22.13.0
            - Name: NPM_REGISTRY_PROTOCOL_LEVICAPE
              Value: https
            - Name: NPM_REGISTRY_HOST_LEVICAPE
              Value: npm.pkg.github.com
            - Name: NODE_AUTH_TOKEN_LEVICAPE
              Value: ${Secrets.GITHUB_LEVICAPE_PAT}
            - Name: NODE_NO_WARNINGS
              Value: "1"
            - Name: NPM_CONFIG_UPDATE_NOTIFIER
              Value: "false"
            - Name: NX_CACHE_DIRECTORY
              Value: /cc/cache/nodejs/nxcache
            - Name: AWS_REGION
              Value: us-west-2
            - Name: FRONTEND_HOSTNAME
              Value: spork.levicape.cloud
            - Name: PULUMI_CONFIG_PASSPHRASE
              Value: ${{ Secrets.PULUMI_CONFIG_PASSPHRASE }}
            - Name: PULUMI_HOME
              Value: /cc/cache/pulumi
            - Name: PULUMI_VERSION
              Value: 3.152.0
            - Name: APPLICATION_IMAGE_NAME
              Value: spork
            - Name: CI_ENVIRONMENT
              Value: current
        Outputs:
          Artifacts:
            - Name: pulumi
              Files:
                - _pulumi/**/*
        Configuration:
          Container:
            Registry: CODECATALYST
            Image: CodeCatalystLinux_Arm64:2024_03
          Steps:
            - Run: npm config set @levicape:registry=$NPM_REGISTRY_PROTOCOL_LEVICAPE://$NPM_REGISTRY_HOST_LEVICAPE --location project; npm config set //$NPM_REGISTRY_HOST_LEVICAPE/:_authToken=$NODE_AUTH_TOKEN_LEVICAPE --location project
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION;echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable;echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo npm config set prefix=/cc/cache/nodejs/npm' && echo '' && sudo npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack -g install $PNPM_VERSION' && echo '' && sudo corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo corepack enable pnpm' && echo '' && sudo corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && sudo pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && sudo pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && sudo pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'sudo pnpx n $NODEJS_VERSION' && echo '' && sudo pnpx n $NODEJS_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'npm config set prefix=/cc/cache/nodejs/npm' && echo '' && npm config set prefix=/cc/cache/nodejs/npm; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack -g install $PNPM_VERSION' && echo '' && corepack -g install $PNPM_VERSION; echo '' && echo '>>>>>>>>>>>>>' && echo 'corepack enable pnpm' && echo '' && corepack enable pnpm; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set cache-dir /cc/cache/nodejs/pnpmcache' && echo '' && pnpm config set cache-dir /cc/cache/nodejs/pnpmcache; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set global-dir /cc/cache/nodejs/pnpmglobal' && echo '' && pnpm config set global-dir /cc/cache/nodejs/pnpmglobal; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpm config set store-dir /cc/cache/nodejs/addressable' && echo '' && pnpm config set store-dir /cc/cache/nodejs/addressable; echo '' && echo '>>>>>>>>>>>>>' && echo 'pnpx n $NODEJS_VERSION' && echo '' && pnpx n $NODEJS_VERSION
            - Run: pnpm install --prefer-offline --ignore-scripts
            - Run: aws ssm get-parameter --name /fourtwo/_principal/pulumi/backend/StateBackendCommandReference
            - Run: pnpm exec fourtwo aws pulumi ci --region $AWS_REGION > .pulumi-ci
            - Run: cat .pulumi-ci
            - Run: cat .pulumi-ci | grep "export" >> .export-cd
            - Run: cat .export-cd && source .export-cd
            - Run: echo $AWS_PROVIDER_KEY
            - Run: |-
                echo '
                configure_stack() {
                	local step="$1"
                	local stack_name="$2"
                	local stack_cwd="$3"
                	local project="$4"
                	local output="$5"

                	echo "${step}: Stack: ${stack_name}. CWD: ${stack_cwd}. Output: ${output}."
                	echo "name: ${project}" >> "${stack_cwd}/Pulumi.yaml"
                	cat "${stack_cwd}"/Pulumi.{yaml,"*".yaml} || true
                }
                setup_stack() {
                	local binary="$1"
                	local stack_name="$2"
                	local stack_cwd="$3"
                	
                	echo "Setting up stack: ${stack_name}. CWD: ${stack_cwd}."
                	for cmd in init select; do
                		${binary} stack ${cmd} ${stack_name} -C ${stack_cwd} || true
                	done
                }
                configure_stack_settings() {
                	local binary="$1"
                	local stack_cwd="$2"
                	local configs="$3"
                	
                	echo "Configuring stack settings"
                	
                	while IFS= read -r line; do
                	  if [[ -n "$line" ]]; then
                		key="${line%%=*}"
                		value="${line#*=}"
                      	
                		# Expand variables in value
                		eval "value="$value""
                		
                		if [[ -n "$key" && -n "$value" ]]; then
                		  echo "Setting $key to $value"
                		  $binary config set --path "$key" "$value" -C "$stack_cwd"
                		fi
                	  fi
                	done <<< "$configs"
                  }
                set_state_backend() {
                	local binary="$1"
                	local provider="$2"
                	local stack_cwd="$3"

                	${binary} stack change-secrets-provider "${provider}" -C "${stack_cwd}"
                	cat "${stack_cwd}"/Pulumi.{yaml,"*".yaml} || true
                }
                refresh_and_preview() {
                	local binary="$1"
                	local message="$2"
                	local stack_cwd="$3"
                	shift 3
                	local -a default_args=("$@")

                	${binary} refresh --yes --skip-preview --clear-pending-creates --message "${message}-refresh" -C "${stack_cwd}" "${default_args[@]}"
                	${binary} preview --show-replacement-steps --message "${message}-preview" -C "${stack_cwd}" "${default_args[@]}"
                }
                deploy_stack() {
                	local binary="$1"
                	local message="$2"
                	local stack_cwd="$3"
                	shift 3
                	local -a default_args=("$@")

                	${binary} up --yes --message "${message}-up" -C "${stack_cwd}" "${default_args[@]}"

                }

                capture_outputs() {
                	local binary="$1"
                	local stack_cwd="$2"
                	local output="$3"

                	${binary} stack output -C "${stack_cwd}" --json > "$(pwd)/${output}.json"
                	cat "${output}.json"
                	${binary} stack output -C "${stack_cwd}" --shell > "$(pwd)/${output}.sh"
                	cat "${output}.sh"
                }
                ' > .pulumi-ci-helper;
                source .pulumi-ci-helper
            - Run: 'mkdir -p _pulumi || true && echo "Deploy onto root: spork"'
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-application.current" "$(pwd)/iac/stacks/src/application" "spork-application" "_pulumi/application" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-application.current" "$(pwd)/iac/stacks/src/application" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/application" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-application.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/application" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/application" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/application" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/application" "_pulumi/application"
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-codestar.current" "$(pwd)/iac/stacks/src/codestar" "spork-codestar" "_pulumi/codestar" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-codestar.current" "$(pwd)/iac/stacks/src/codestar" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/codestar" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-codestar.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/codestar" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/codestar" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/codestar" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/codestar" "_pulumi/codestar"
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-datalayer.current" "$(pwd)/iac/stacks/src/datalayer" "spork-datalayer" "_pulumi/datalayer" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-datalayer.current" "$(pwd)/iac/stacks/src/datalayer" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/datalayer" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-datalayer.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/datalayer" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/datalayer" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/datalayer" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/datalayer" "_pulumi/datalayer"
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-http.current" "$(pwd)/iac/stacks/src/http" "spork-http" "_pulumi/http" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-http.current" "$(pwd)/iac/stacks/src/http" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/http" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-http.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/http" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/http" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/http" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/http" "_pulumi/http"
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-magmap-http.current" "$(pwd)/iac/stacks/src/domains/magmap/http" "spork-magmap-http" "_pulumi/domains_magmap_http" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-magmap-http.current" "$(pwd)/iac/stacks/src/domains/magmap/http" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/http" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-magmap-http.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/domains/magmap/http" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/http" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/http" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/http" "_pulumi/domains_magmap_http"
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-magmap-web.current" "$(pwd)/iac/stacks/src/domains/magmap/web" "spork-magmap-web" "_pulumi/domains_magmap_web" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-magmap-web.current" "$(pwd)/iac/stacks/src/domains/magmap/web" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/web" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-magmap-web.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/domains/magmap/web" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/web" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/web" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/web" "_pulumi/domains_magmap_web"
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-magmap-monitor.current" "$(pwd)/iac/stacks/src/domains/magmap/monitor" "spork-magmap-monitor" "_pulumi/domains_magmap_monitor" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-magmap-monitor.current" "$(pwd)/iac/stacks/src/domains/magmap/monitor" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/monitor" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-magmap-monitor.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/domains/magmap/monitor" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/monitor" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/monitor" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/monitor" "_pulumi/domains_magmap_monitor"
            - Run: |-
                source .pulumi-ci-helper && configure_stack "Deploy" "spork-magmap-wwwroot.current" "$(pwd)/iac/stacks/src/domains/magmap/wwwroot" "spork-magmap-wwwroot" "_pulumi/domains_magmap_wwwroot" && setup_stack "/cc/cache/pulumi/bin/pulumi" "spork-magmap-wwwroot.current" "$(pwd)/iac/stacks/src/domains/magmap/wwwroot" && configure_stack_settings "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/wwwroot" 'aws:skipMetadataApiCheck=false
                context:stack.environment.isProd=false
                context:stack.environment.features=aws
                frontend:stack.dns.hostnames[0]=current.spork.$FRONTEND_HOSTNAME
                frontend:stack.dns.hostnames[1]=spork-magmap-wwwroot.current.spork.$FRONTEND_HOSTNAME' && set_state_backend "/cc/cache/pulumi/bin/pulumi" "$AWS_PROVIDER_KEY" "$(pwd)/iac/stacks/src/domains/magmap/wwwroot" && refresh_and_preview "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/wwwroot" --non-interactive --suppress-progress --diff --json
            - Run: |-
                source .pulumi-ci-helper
                deploy_stack "/cc/cache/pulumi/bin/pulumi" "${WorkflowSource.BranchName}-${WorkflowSource.CommitId}" "$(pwd)/iac/stacks/src/domains/magmap/wwwroot" --non-interactive --suppress-progress --diff --json
                capture_outputs "/cc/cache/pulumi/bin/pulumi" "$(pwd)/iac/stacks/src/domains/magmap/wwwroot" "_pulumi/domains_magmap_wwwroot"
            - Run: du -sh _pulumi

########################################
########################################
#**:_$~- {"$$":"head","filename":"[schedule(0_0_*_*_?_*)]CI.yml","source":"iac/workflows/codecatalyst/push/CI.js"}
#**:_$~- {"$$":"script","generator":"codegen/codecatalyst/GenerateCodeCatalystWorkflow.mjs"}
#**:_$~- {"$$":"body","hashed":"0d7ca82fe4eafcc9eacca2eaad99d689cbf987936addc0098580c4d3f00ee7a7"}
#**:_$~- {"$$":"footer","started":"2025-02-28T08:28:32.692Z","now":"2025-02-28T08:28:32.695Z","elapsed":"3ms"}
# END OF GENERATED FILE

