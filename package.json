{
  "name": "@levicape/spork",
  "description": "A serverless framework for Node.js",
  "version": "0.0.0-local.0",
  "author": "Pedro Cardona",
  "bin": {
    "@levicape/spork": "module/cli/bin.mjs"
  },
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "binpath": "./src/cli/bin.mts",
    "clipath": "./module/cli/bin.mjs",
    "lintpaths": "./src ./canary",
    "protocols": "./src/_protocols",
    "server": "module/app/router/hono/HonoHttpSpork.mjs"
  },
  "dependencies": {
    "@aws-sdk/client-dynamodb": "catalog:aws",
    "@aws-sdk/client-secrets-manager": "catalog:aws",
    "@aws-sdk/client-sqs": "catalog:aws",
    "@aws-sdk/lib-dynamodb": "catalog:aws",
    "@aws-sdk/util-dynamodb": "catalog:aws",
    "@hono/zod-validator": "catalog:hono",
    "@paralleldrive/cuid2": "catalog:id",
    "@stricjs/cluster": "catalog:server",
    "@stricjs/utils": "catalog:server",
    "@stricli/core": "catalog:cli",
    "aws4fetch": "catalog:aws",
    "compressible": "catalog:hono",
    "consola": "catalog:server",
    "hono-rate-limiter": "catalog:hono",
    "hookable": "catalog:server",
    "http-status-codes": "catalog:http",
    "knex": "catalog:database",
    "ksuid": "catalog:id",
    "odata-filter-parser": "catalog:http",
    "pino-lambda": "catalog:aws",
    "slonik": "catalog:database",
    "ulidx": "catalog:id",
    "uuid-base64-ts": "catalog:id"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@bufbuild/buf": "catalog:protobuf",
    "@types/compressible": "catalog:types",
    "@types/jsonwebtoken": "catalog:types",
    "@types/node": "catalog:types",
    "depcheck": "catalog:package",
    "expect": "catalog:test",
    "publint": "catalog:package",
    "syncpack": "catalog:package",
    "ts-proto": "catalog:protobuf",
    "tsx": "catalog:dev",
    "typescript": "catalog:dev"
  },
  "engines": {
    "node": ">=22.0.0"
  },
  "exports": {
    "./domains": "./module/app/domains/index.js",
    "./domains/service": "./module/app/domains/service/index.js",
    "./domains/wellknown": "./module/app/domains/wellknown/index.js",
    "./router": "./module/app/router/index.js",
    "./router/hono": "./module/app/router/hono/index.js",
    "./router/hono/guard": "./module/app/router/hono/guard/index.js",
    "./router/hono/guard/security": "./module/app/router/hono/guard/security/index.js",
    "./server": "./module/app/server/index.js",
    "./server/context": "./module/app/server/context/index.js",
    "./server/client": "./module/app/server/client/index.js",
    "./server/client/kv": "./module/app/server/client/kv/index.js",
    "./server/client/kv/aws": "./module/app/server/client/kv/aws/index.js",
    "./server/client/table": "./module/app/server/client/table/index.js",
    "./server/client/table/aws": "./module/app/server/client/table/aws/index.js",
    "./server/client/table/postgres": "./module/app/server/client/table/postgres/index.js",
    "./server/client/queue": "./module/app/server/client/queue/index.js",
    "./server/client/queue/aws": "./module/app/server/client/queue/aws/index.js",
    "./server/client/queue/artemis": "./module/app/server/client/queue/artemis/index.js",
    "./server/exceptions": "./module/app/server/exceptions/index.js",
    "./server/logging": "./module/app/server/logging/index.js",
    "./server/security": "./module/app/server/security/index.js",
    "./lambda": "./module/lambda/index.mjs",
    "./cli": "./module/cli/index.mjs",
    "./ci": "./module/ci/index.mjs"
  },
  "files": [
    "module",
    "iac",
    "protocols",
    ".github"
  ],
  "license": "AGPL-3.0-only",
  "packageManager": "pnpm@9.7.0+sha512.dc09430156b427f5ecfc79888899e1c39d2d690f004be70e05230b72cb173d96839587545d09429b55ac3c429c801b4dc3c0e002f653830a420fa2dd4e3cf9cf",
  "peerDependencies": {
    "@bufbuild/protobuf": "catalog:protobuf",
    "@hono/node-server": "catalog:hono",
    "hono": "catalog:hono",
    "jsonwebtoken": "catalog:crypto",
    "zod": "catalog:core"
  },
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/spork",
  "scripts": {
    "build": "$npm_package_config_packageexecutor tsc",
    "build:ci": "$npm_package_config_packagemanager run generate && $npm_package_config_packagemanager run build",
    "clean": "rm -rf ./module",
    "clean:install": "rm -rf ./node_modules",
    "dx:prepublish": "$npm_package_config_packagemanager run build:ci && $npm_package_config_packagemanager run lint:write && $npm_package_config_packagemanager run package:format && $npm_package_config_packagemanager run prepublish",
    "generate": "$npm_package_config_packagemanager run generate:protocols",
    "generate:protocols": "$npm_package_config_packageexecutor tsx $npm_package_config_binpath code gen --root \"./protocols\" --command \"$(which $npm_package_config_packagemanager) run build:ci\" --artifact gen --destination $npm_package_config_protocols --clean",
    "lint": "$npm_package_config_packageexecutor biome check $npm_package_config_lintpaths",
    "lint:format": "$npm_package_config_packageexecutor biome format --write $npm_package_config_lintpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor biome check --write --unsafe $npm_package_config_lintpaths",
    "lint:write": "$npm_package_config_packageexecutor biome check --write $npm_package_config_lintpaths",
    "package:deps": "$npm_package_config_packageexecutor depcheck",
    "package:fix": "$npm_package_config_packageexecutor syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor syncpack format",
    "package:update": "$npm_package_config_packageexecutor syncpack update",
    "prebuild": "$npm_package_config_packagemanager run clean",
    "prelint": "$npm_package_config_packageexecutor @biomejs/biome format $npm_package_config_lintpaths",
    "prepublish": "$npm_package_config_packageexecutor publint --strict",
    "start": "node $npm_package_config_clipath server start --target $npm_package_config_server",
    "test": "$npm_package_config_packagemanager run test:module && $npm_package_config_packagemanager run test:canary",
    "test:canary": "node --experimental-strip-types canary/basic.ts",
    "test:module": "node --test  \"module/**/*.test.js\""
  },
  "type": "module",
  "types": "module/index.d.mts"
}
